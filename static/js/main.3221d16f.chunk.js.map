{"version":3,"sources":["components/PermanentDrawer.jsx","components/pollutants_trend/PollutantsTrend.jsx","components/ranked_pollutants/RankedPollutants.jsx","components/ranked_locations/RankedLocations.jsx","components/Dashboard.jsx","components/Pollutants.jsx","components/map/Map.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","drawerPaper","width","drawer","StyledDrawer","styled","Drawer","PermanentDrawer","classes","history","useHistory","location","useLocation","drawerItems","text","icon","sx","fill","path","paper","className","variant","anchor","Grid","container","justifyContent","item","fontSize","Typography","color","List","map","ListItem","button","onClick","push","key","selected","pathname","ListItemIcon","ListItemText","PollutantsTrend","props","Paper","data","labels","chartLabels","datasets","label","ozone","backgroundColor","borderColor","borderWidth","pm25","pm10","options","scales","y","display","title","align","font","family","size","style","lineHeight","padding","top","left","right","bottom","height","messages","getAqiLevelRatio","aqiValue","Math","round","getHealthConcernLevel","levels","PollutantElement","parameterName","rating","aqi","reportingArea","description","useState","showHealthAdvice","setShowHealthAdvice","alignItems","margin","Number","message","ChartBar","console","log","ParameterName","AQI","index","Charts","HealthEffects","Category","Name","RankedPollutant","zipCodeInputEl","useRef","isLoading","setLoading","setData","zipCode","setZipCode","API_URL","useEffect","fetch","then","res","json","Card","type","ref","defaultValue","onChange","e","target","value","RankedLocations","siteName","indexAxis","plugins","legend","x","apikey","GetCalendarDate","offset","year","now","Date","start","getFullYear","diff","getTimezoneOffset","day","floor","calDate","setDate","GetStartEndDate","dateObj","getMonth","getDate","tempPollutantsTrendData","tempRankedLocationData","Dashboard","apiLimitError","setApiLimitError","pollutantsTrendData","setPollutantsTrendData","rankedPollutantsData","setRankedPollutantsdata","days","i","GetDayOfWeekLabels","getDay","GetRankedLocationData","a","startDate","endDate","axios","get","response","sortedData","sort","whileCount","locationCount","SiteName","length","includes","catch","error","status","Alert","severity","AlertTitle","xs","md","lg","TextField","inputProps","maxLength","textAlign","onKeyUp","CheckLength","myZip","calendarDate","forEach","GetPollutansTrendData","Box","RankedPollutants","Pollutants","require","config","mapboxgl","workerClass","default","geolocateControlStyle","Map","latitude","longitude","zoom","viewport","setViewport","handleViewportChange","useCallback","newViewport","transitionDuration","mapdata","setMapdata","selectedMonitor","setSelectedMonitor","GetMapData","dataAPI","mapboxApiAccessToken","mapStyle","onViewportChange","Latitude","Longitude","IconButton","preventDefault","maxWidth","maxHeight","minWidth","minHeight","offsetLeft","offsetTop","onClose","Parameter","RawConcentration","Value","UTC","positionOptions","enableHighAccuracy","fitBoundsOptions","maxZoom","trackUserLocation","auto","render","document","getElementById","root","App","exact","component","window","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.3221d16f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { Drawer, Grid, Typography } from '@mui/material';\r\nimport List from '@mui/material/List';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { ListItem } from '@mui/material';\r\nimport TrackChangesOutlinedIcon from '@mui/icons-material/TrackChangesOutlined';\r\nimport GraphicEqIcon from '@mui/icons-material/GraphicEq';\r\nimport RoomOutlinedIcon from '@mui/icons-material/RoomOutlined';\r\nimport WarningAmberOutlinedIcon from '@mui/icons-material/WarningAmberOutlined';\r\nimport LocalLibraryOutlinedIcon from '@mui/icons-material/LocalLibraryOutlined';\r\nimport { styled } from '@mui/system';\r\n\r\n\r\nconst drawerWidth = 240\r\nconst iconColor = 'white'\r\n\r\nconst useStyles = makeStyles({\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n  },\r\n});\r\n\r\nconst StyledDrawer = styled(Drawer)`\r\n  & > div {\r\n    background-color: #081A51;\r\n  }\r\n`;\r\n\r\nconst PermanentDrawer = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  \r\n  const drawerItems = [\r\n    {\r\n      text: 'Dashboard',\r\n      icon: <GraphicEqIcon sx={{fill: iconColor}}/>,\r\n      path: '/HAQ-I'\r\n    },\r\n    {\r\n      text: 'Map',\r\n      icon: <RoomOutlinedIcon sx={{fill: iconColor}}/>,\r\n      path: '/map'\r\n    },\r\n    {\r\n      text: 'Pollutants',\r\n      icon: <WarningAmberOutlinedIcon sx={{fill: iconColor}}/>,\r\n      path: '/pollutants'\r\n    },\r\n    {\r\n      text: 'Agency',\r\n      icon: <LocalLibraryOutlinedIcon sx={{fill: iconColor}}/>,\r\n      path: '/agency'\r\n    },\r\n  ]\r\n  return (\r\n    <StyledDrawer\r\n      classes={{ paper: classes.drawerPaper}}\r\n      className={classes.drawer}\r\n      variant=\"permanent\"\r\n      anchor=\"left\"\r\n    >\r\n      <div>\r\n        <Grid container justifyContent='center'>\r\n          <Grid item sx={6}>\r\n            <TrackChangesOutlinedIcon sx={{ fill: iconColor, fontSize: 40 }}/>\r\n          </Grid>\r\n          <Grid item sx={6}>\r\n            <Typography variant=\"h4\" color='#fff'>\r\n              HAQ-I\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n\r\n      <List>\r\n        {drawerItems.map(item => (\r\n      <ListItem button onClick={() => history.push(item.path)} key={item.text} selected={item.path === location.pathname}>\r\n            <ListItemIcon>{item.icon}</ListItemIcon>\r\n            <ListItemText>\r\n              <Typography color=\"#FFFFFF\">\r\n                {item.text}\r\n              </Typography>\r\n            </ListItemText>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </StyledDrawer>\r\n  );\r\n}\r\n\r\nexport default PermanentDrawer;","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Paper } from '@mui/material';\r\n\r\nconst PollutantsTrend = (props) => {\r\n  return (\r\n    <Paper>\r\n      <Line\r\n      data = {{\r\n        labels: props.chartLabels,\r\n        datasets: [{\r\n          label: 'OZONE',\r\n          data: props.data.ozone,\r\n          backgroundColor: 'rgba(48, 217, 135, 1)',\r\n          borderColor: 'rgba(48, 217, 135, 1)',\r\n          borderWidth: 2\r\n        },\r\n        {\r\n          label: 'PM2.5',\r\n          data: props.data.pm25,\r\n          backgroundColor: 'rgba(1, 126, 250, 1)',\r\n          borderColor: 'rgba(1, 126, 250, 1)',\r\n          borderWidth: 2\r\n      },\r\n      {\r\n        label: 'PM10',\r\n        data: props.data.pm10,\r\n        backgroundColor: 'rgba(253, 31, 155, 1)',\r\n        borderColor: 'rgba(253, 31, 155, 1)',\r\n        borderWidth: 2\r\n      }]\r\n      }}\r\n      options = {{\r\n        scales: {\r\n          y: {\r\n            display: true,\r\n            title: {\r\n              display: true,\r\n              text: 'AQI',\r\n              color: '#000000',\r\n              align: 'center',\r\n              font: {\r\n                family: 'Calibri',\r\n                size: 15,\r\n                style: 'normal',\r\n                lineHeight: 1.2\r\n              },\r\n              padding: {top: 5, left: 0, right: 0, bottom: 0}\r\n            }\r\n          }\r\n        }\r\n      }}\r\n      height={null}\r\n      width={null}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default PollutantsTrend;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { BsChevronDown, BsChevronUp } from \"react-icons/bs\"\r\nimport \"./styles.css\";\r\nimport Card from '@mui/material/Card';\r\nimport Box from '@mui/material/Box';\r\n\r\n\r\n// messages to display to users for different AQI levels\r\nconst messages = [\r\n    \"Enjoy your outdoor activit\",\r\n    \"If you are unusually sensitive to particle pollution, consider reducing your activity level or shorten the amount of time you are active outdoors.\",\r\n    \"Unusually sensitive people should consider limiting prolonged outdoor exertion\",\r\n    \"Active children and adults and people with respiratory disease such as asthma  should avoid prolonged outdoor exertion. Everyone else, especially children,    should limit prolonged outdoor exertion\",\r\n    \"Active children and adults, and people with respiratory disease such as asthma,should avoid all outdoor exertion. Everyone else, especially children, should limit outdoor exertion.\",\r\n    \"Everyone should avoid all outdoor exertion.\"\r\n];\r\n\r\nconst getAqiLevelRatio = (aqiValue) => Math.round(aqiValue / 500 * 100, 2)\r\n\r\nconst getHealthConcernLevel = (aqiValue) => {\r\n    const levels = [\r\n        {\r\n            'title': \"good\",\r\n            \"color\": \"lightgreen\",\r\n            \"message\": messages[0]\r\n        },\r\n        {\r\n            'title': 'moderate',\r\n            'color': 'yellow',\r\n            \"message\": messages[1]\r\n        }, {\r\n            'title': 'unhealthy for sensitive groups',\r\n            'color': 'orange',\r\n            \"message\": messages[2]\r\n        }, {\r\n            'title': 'unhealthy',\r\n            'color': 'pink',\r\n            \"message\": messages[3]\r\n        }, {\r\n            'title': 'very unhealthy',\r\n            'color': 'purple',\r\n            \"message\": messages[4]\r\n        }, {\r\n            'title': 'hazardous',\r\n            'color': 'maroon',\r\n            \"message\": messages[5]\r\n        }]\r\n\r\n    if (aqiValue >= 0 && aqiValue <= 50) {\r\n        return levels[0]\r\n    }\r\n\r\n    if (aqiValue >= 51 && aqiValue <= 100) {\r\n        return levels[1]\r\n    }\r\n\r\n    if (aqiValue >= 101 && aqiValue <= 150) {\r\n        return levels[2]\r\n    }\r\n\r\n    if (aqiValue >= 151 && aqiValue <= 200) {\r\n        return levels[3]\r\n    }\r\n\r\n    if (aqiValue >= 201 && aqiValue <= 300) {\r\n        return levels[4]\r\n    }\r\n\r\n    if (aqiValue >= 301) {\r\n        return levels[5]\r\n    }\r\n\r\n    return {\r\n        'title': 'undefined',\r\n        'color': 'gray',\r\n        'message': \"Nothing\"\r\n    }\r\n}\r\n\r\n\r\nconst PollutantElement = ({ title, parameterName, rating, aqi, reportingArea, description }) => {\r\n    const [showHealthAdvice, setShowHealthAdvice] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    width: \"320px\",\r\n                    alignItems: \"center\",\r\n                    margin: \"16px 0\"\r\n                }}\r\n            >\r\n                <strong className=\"w-20\">{parameterName ? parameterName : \"No Data\"}</strong>\r\n                <div className=\"w-20\">\r\n                    <span className=\"aqi-circle\" style={{\r\n                        backgroundColor: getHealthConcernLevel(Number(aqi)).color\r\n                    }}>\r\n                        {aqi ? aqi : \"No AQI\"}\r\n                    </span>\r\n                </div>\r\n\r\n                <span className=\"w-30\">{rating}</span>\r\n                <span onClick={() => setShowHealthAdvice(!showHealthAdvice)}>\r\n                    {showHealthAdvice ? <BsChevronUp /> : <BsChevronDown />}\r\n                </span>\r\n            </div>\r\n            {showHealthAdvice && <div>{getHealthConcernLevel(Number(aqi)).message}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ChartBar = ({ data }) => {\r\n    console.log(data)\r\n    return (\r\n        <div className=\"flex chartbar-item\">\r\n            <span className=\"w-20 b\">{data && data.ParameterName}</span>\r\n            <span className=\"w-10\">{data && data.AQI}</span>\r\n            <div className=\"w-70\">\r\n                <div className=\"chartbar-wrapper\">\r\n                    <div className=\"chartbar-main\" style={{\r\n                        width: `${data && getAqiLevelRatio(data.AQI)}%`\r\n                    }} />\r\n                    <div className=\"chartbar-bg\">\r\n                        {\r\n                            [{\r\n                                width: 10,\r\n                                color: 'lightgreen'\r\n                            }, {\r\n                                width: 10,\r\n                                color: '#fbff17'\r\n                            }, {\r\n                                width: 10,\r\n                                color: '#ff7c17'\r\n                            }, {\r\n                                width: 10,\r\n                                color: 'red'\r\n                            }, {\r\n                                width: 20,\r\n                                color: 'purple'\r\n                            }, {\r\n                                width: 40,\r\n                                color: '#520909'\r\n                            }].map((item, index) =>\r\n                                <div key={index} className=\"chartbar-group\" style={{\r\n                                    width: `${item.width}%`,\r\n                                    backgroundColor: item.color\r\n                                }} />\r\n                            )\r\n\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {data && getAqiLevelRatio(data.AQI)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Charts = ({ data }) => {\r\n    return (\r\n        <div className=\"ph3\">\r\n            <h2>Ranked by Pollutants</h2>\r\n            <div className=\"ph4\">\r\n                {data && data.map((item, index) => <ChartBar data={item} key={index} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst HealthEffects = ({ data }) => {\r\n    return (\r\n        <div>\r\n            <h2>Health Effect</h2>\r\n            {data && data.map((item, index) => <PollutantElement parameterName={item.ParameterName} aqi={item.AQI} rating={item.Category.Name} key={index} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst RankedPollutant = () => {\r\n    const zipCodeInputEl = useRef(null)\r\n    const [isLoading, setLoading] = useState(true)\r\n    const [data, setData] = useState(null)\r\n    const [zipCode, setZipCode] = useState(\"77057\")\r\n    let API_URL = `https://www.airnowapi.org/aq/observation/zipCode/current/?format=application/json&zipCode=${zipCode}&distance=25&API_KEY=055CDA36-3FC4-4E95-BBBE-73C265CF3131`;\r\n\r\n    useEffect(() => {\r\n        fetch(API_URL).then((res) => res.json()).then((data) => {\r\n            setData(data)\r\n            setLoading(false)\r\n        })\r\n    }, [zipCode])\r\n    return (\r\n        <Card>\r\n            <input\r\n                type=\"number\"\r\n                ref={zipCodeInputEl}\r\n                defaultValue={zipCode}\r\n                onChange={(e) => setZipCode(e.target.value)}\r\n            />\r\n            <div className=\"flex\">\r\n                <div className=\"w-70\">\r\n                    {!data && isLoading && <span>Loading data</span>}\r\n                    {data && <Charts data={data} />}\r\n                    {!data && !isLoading && <span>Failed to load data</span>}\r\n                </div>\r\n                <div className=\"w-50\">\r\n                    {!data && isLoading && <span>Loading data</span>}\r\n\r\n                    {data && <HealthEffects data={data} />}\r\n                    {!data && !isLoading && <span>Failed to load data</span>}\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default RankedPollutant","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Paper, Typography } from '@mui/material';\r\n\r\nconst RankedLocations = (props) => {\r\n  return (\r\n    <>\r\n      <Paper>\r\n        <Typography align='center'>\r\n          Rank by Locations in Houston\r\n        </Typography>\r\n        <Bar\r\n        data = {{\r\n          labels: props.data.siteName,\r\n          datasets: [{\r\n            label: 'HOUSTON',\r\n            data: props.data.aqi,\r\n            backgroundColor: 'rgba(81, 203, 255, 1)',\r\n            borderColor: 'rgba(81, 203, 255, 1)',\r\n            borderWidth: 2\r\n          },\r\n        ]\r\n        }}\r\n        options = {{\r\n          indexAxis: 'y',\r\n          plugins: {\r\n            legend: {\r\n              display: false\r\n            }\r\n          },\r\n          scales: {\r\n            x: {\r\n              display: true,\r\n              title: {\r\n                display: true,\r\n                text: 'AQI',\r\n                color: '#000000',\r\n                align: 'center',\r\n                font: {\r\n                  family: 'Calibri',\r\n                  size: 15,\r\n                  style: 'normal',\r\n                  lineHeight: 1.2\r\n                },\r\n                padding: {top: 5, left: 0, right: 0, bottom: 0}\r\n              }\r\n            }\r\n          }\r\n        }}\r\n        height={null}\r\n        width={null}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RankedLocations;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport PollutantsTrend from './pollutants_trend/PollutantsTrend';\r\nimport Alert from '@mui/material/Alert';\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\nimport { Box, TextField, Grid } from '@mui/material';\r\n\r\nimport RankedPollutants from './ranked_pollutants/RankedPollutants';\r\nimport RankedLocations from './ranked_locations/RankedLocations';\r\n\r\nconst apikey = '81AE9E6C-ABE1-4FE5-A11C-75ED6ACA2A07'\r\n\r\nconst InitialPollutantsTrendData = () => {\r\n  return {\r\n    ozone: [null,null,null,null,null,null,null], \r\n    pm25: [null,null,null,null,null,null,null], \r\n    pm10: [null,null,null,null,null,null,null]\r\n  }\r\n};\r\n\r\nconst InitialRankedLocationData = () => {\r\n  return {\r\n    siteName: [null,null,null,null,null], \r\n    aqi: [null,null,null,null,null], \r\n  }\r\n};\r\n\r\nconst GetCalendarDate = (offset, year) => {\r\n  const oneDay = 1000 * 60 * 60 * 24;\r\n  const now = new Date();\r\n  const start = new Date(now.getFullYear(), 0, 0);\r\n  const diff = (now - start) + ((start.getTimezoneOffset() - now.getTimezoneOffset()) * 60 * 1000 - (oneDay * offset));\r\n  const day = Math.floor(diff / oneDay);\r\n  const calDate = new Date(year, 0)\r\n  return new Date(calDate.setDate(day))\r\n};\r\n\r\nconst GetStartEndDate = () => {\r\n  let dateObj = GetCalendarDate(0, new Date().getFullYear())\r\n  const start = dateObj.getFullYear() + '-' + (dateObj.getMonth() + 1) + '-' + dateObj.getDate()\r\n  dateObj = GetCalendarDate(1, new Date().getFullYear())\r\n  const end = dateObj.getFullYear() + '-' + (dateObj.getMonth() + 1) + '-' + dateObj.getDate()\r\n  return [end, start]\r\n};\r\n\r\nconst tempPollutantsTrendData = InitialPollutantsTrendData();\r\nconst tempRankedLocationData = InitialRankedLocationData();\r\n\r\nconst GetDayOfWeekLabels = (dateObj) => {\r\n  const days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday']\r\n  const labels = [null,null,null,null,null,null,null]\r\n  for (let i = 6; i > -1; i--){\r\n    labels[i] = days[ dateObj ]\r\n    dateObj = dateObj - 1\r\n    if (dateObj === -1) {\r\n      dateObj = 6\r\n    }\r\n  }\r\n  return labels;\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const [apiLimitError, setApiLimitError] = useState(false)\r\n  const [pollutantsTrendData, setPollutantsTrendData] = useState(() => InitialPollutantsTrendData());\r\n  const [rankedPollutantsData, setRankedPollutantsdata] = useState(() => InitialRankedLocationData());\r\n  const chartLabels = GetDayOfWeekLabels(new Date().getDay());\r\n\r\n  const GetRankedLocationData = async () => {\r\n    const [startDate, endDate] = GetStartEndDate()\r\n    await axios.get('https://www.airnowapi.org/aq/data/?startDate=' + startDate + 'T00&endDate=' + endDate + 'T00&parameters=OZONE,PM25,PM10&BBOX=-96.072388,29.091871,-94.578247,30.227919&dataType=A&format=application/json&verbose=1&monitorType=2&includerawconcentrations=0&API_KEY=' + apikey)\r\n    .then((response) => {\r\n      const sortedData = response.data.sort(({AQI:x},{AQI:y}) => y - x)\r\n      let whileCount = 1\r\n      let locationCount = 1\r\n      tempRankedLocationData.siteName[0] = sortedData[0].SiteName\r\n      tempRankedLocationData.aqi[0] = sortedData[0].AQI\r\n      // Get unique site names for tempRankedLocationData\r\n      while (locationCount < 5 && whileCount < response.data.length){\r\n        if (!tempRankedLocationData.siteName.includes(sortedData[whileCount].SiteName)) {\r\n          tempRankedLocationData.siteName[locationCount] = sortedData[whileCount].SiteName\r\n          tempRankedLocationData.aqi[locationCount] = sortedData[whileCount].AQI\r\n          locationCount += 1\r\n        }\r\n        whileCount += 1\r\n      }\r\n      setRankedPollutantsdata(tempRankedLocationData);\r\n    })\r\n    .catch((error) => {\r\n      if (error.response.status === 429){\r\n        setApiLimitError(true)\r\n      }\r\n    })\r\n  };\r\n\r\n  const GetPollutansTrendData = (myZip) => {\r\n    // Set initial day of year and current year\r\n    let dateObj = GetCalendarDate(0, new Date().getFullYear())\r\n    let calendarDate = dateObj.getFullYear() + '-' + (dateObj.getMonth() + 1) + '-' + dateObj.getDate()\r\n    console.log('CURRENT DATE', calendarDate)\r\n    for (let i = 6; i > -1; i--) { // For the past 7 days\r\n      axios.get('https://www.airnowapi.org/aq/observation/zipCode/historical/?format=application/json&zipCode=' + myZip + '&date=' + calendarDate + 'T00-0000&distance=25&API_KEY=' + apikey)\r\n      .then((response) => {\r\n        response.data.forEach(data => \r\n          data.ParameterName === 'OZONE' ? tempPollutantsTrendData.ozone[i] = data.AQI :\r\n          data.ParameterName === 'PM2.5' ? tempPollutantsTrendData.pm25[i] = data.AQI :\r\n          data.ParameterName === 'PM10' ? tempPollutantsTrendData.pm10[i] = data.AQI :\r\n          null\r\n        )\r\n      })\r\n      dateObj = GetCalendarDate(7 - i, dateObj.getFullYear())\r\n      calendarDate = dateObj.getFullYear() + '-' + (dateObj.getMonth() + 1) + '-' + dateObj.getDate()\r\n    }\r\n    console.log('tempPollutantsTrendData', tempPollutantsTrendData.ozone)\r\n  };\r\n\r\n  const CheckState = () => {\r\n    setPollutantsTrendData(InitialPollutantsTrendData());\r\n  };\r\n\r\n  const CheckLength = (text) => {\r\n    if (text.length === 5) {\r\n      return true\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPollutantsTrendData(tempPollutantsTrendData);\r\n    GetRankedLocationData();\r\n  },[pollutantsTrendData]);\r\n\r\n  const RenderDashboard = () => {\r\n    if (apiLimitError){\r\n    return ( \r\n      <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh', width: '100%'}}>\r\n        <Alert severity=\"error\">\r\n          <AlertTitle>Error</AlertTitle>\r\n            <strong>Reached request limit of AirNow API. Please come back in one hour.</strong>\r\n        </Alert>\r\n      </div>\r\n    )}\r\n    return (\r\n      <Grid container>\r\n        <Grid container item justifyContent='center' xs={12} md={12} lg={12}>\r\n          <Grid item xs='auto' md='auto' lg='auto'>\r\n            <TextField \r\n              label=\"ZIPCODE\" \r\n              variant=\"standard\" \r\n              inputProps={{ maxLength: 5, style: { textAlign: 'center', color: '#1976d2' } }}\r\n              onKeyUp={(e) => e.key === 'Enter' ? CheckState() : CheckLength(e.target.value) ? GetPollutansTrendData(e.target.value) : null} />\r\n              {/* <Button variant=\"contained\" sx={{ ml: '5px', mt: '12px' }} onClick={() => CheckState()}>Search</Button> */}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container item xs={12} md={12} lg={12}>\r\n          <Grid item xs={12} md={12} lg={12}>\r\n            <Box sx={{ width: '99%', height: '25%', margin: '8px'}}>\r\n              <PollutantsTrend data={pollutantsTrendData} chartLabels={chartLabels}/>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={6} md={6} lg={6}>\r\n            <Box sx={{ width: '98%', height: '25%', margin: '8px'}}>\r\n              <RankedPollutants data={null}/>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={6} md={6} lg={6}>\r\n            <Box sx={{ width: '98%', height: '25%', margin: '8px'}}>\r\n              <RankedLocations data={rankedPollutantsData}/>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {(\r\n      RenderDashboard()\r\n    )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\n// import { Typography, AppBar, Card, CardActions, CardContent, CardMedia, CssBaseline, Grid, Toolbar, Container } from '@material-ui/core';\r\n\r\nconst Pollutants = () => {\r\n  return (\r\n      <div>\r\n        <h1>Pollutants</h1>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Pollutants;","import React, { useState, useRef, useCallback } from \"react\";\r\nimport ReactMapGL, {Marker, Popup} from \"react-map-gl\";\r\nimport { render } from \"react-dom\";\r\nimport {GeolocateControl} from \"react-map-gl\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport mapboxgl from 'mapbox-gl';\r\nimport axios from 'axios';\r\nimport { useEffect } from \"react\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport RoomIcon from '@mui/icons-material/Room';\r\nimport Box from '@mui/material/Box';\r\nrequire('dotenv').config();\r\n\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nmapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker').default;\r\n\r\n\r\nconst geolocateControlStyle= {\r\n  right: 10,\r\n  top: 10\r\n};\r\n\r\n\r\nconst Map = () => {\r\n   \r\n  const [viewport, setViewport] = useState({\r\n    latitude: 29.749907,\r\n    longitude: -95.358421,\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    zoom: 8.5,\r\n  });\r\n\r\n  const mapRef = useRef();\r\n  const handleViewportChange = useCallback(\r\n    (newViewport) => setViewport(newViewport),\r\n    []\r\n  );\r\n\r\n  // if you are happy with Geocoder default settings, you can just use handleViewportChange directly\r\n  const handleGeocoderViewportChange = useCallback(\r\n    (newViewport) => {\r\n      const geocoderDefaultOverrides = { transitionDuration: 1000 };\r\n\r\n      return handleViewportChange({\r\n        ...newViewport,\r\n        ...geocoderDefaultOverrides\r\n      });\r\n    },\r\n    [handleViewportChange]\r\n  );\r\n\r\n    const [mapdata, setMapdata] = useState([]);\r\n    const [selectedMonitor, setSelectedMonitor] = useState(null);\r\n    const GetMapData = async () =>{\r\n      try{\r\n        const dataAPI = await axios.get(\"https://www.airnowapi.org/aq/data/?startDate=2021-11-23T20&endDate=2021-11-23T21&parameters=OZONE,PM25,PM10&BBOX=-95.945435,29.260701,-94.341431,30.195642&dataType=B&format=application/json&verbose=0&monitorType=2&includerawconcentrations=1&API_KEY=055CDA36-3FC4-4E95-BBBE-73C265CF3131\")\r\n        console.log(dataAPI.data);\r\n        setMapdata(dataAPI.data);\r\n      }\r\n      catch(e){\r\n        console.log(e)\r\n      }\r\n    }\r\n\r\n    useEffect(()=>{\r\n      GetMapData()\r\n    },[])\r\n\r\n   \r\n  return (\r\n\r\n    <div>\r\n      <ReactMapGL \r\n         {...viewport} \r\n          mapboxApiAccessToken=\"pk.eyJ1IjoiY29ycmlnZXV4IiwiYSI6ImNrdnZ6dHl4NTBkenAybm8xd3JvZnBtYngifQ.2NhYu29NM9-8J5adEyvuzA\"\r\n          mapStyle=\"mapbox://styles/corrigeux/ckvw155sf03ac14lh1u9rv6sh\"\r\n          onViewportChange={(viewport) => setViewport(viewport)}\r\n            >\r\n\r\n{mapdata.map((item => (\r\n  \r\n    <Marker\r\n     key={item}\r\n     latitude={item.Latitude}\r\n     longitude={item.Longitude}\r\n     >\r\n       \r\n   <IconButton onClick={(e) => {\r\n     e.preventDefault();\r\n     setSelectedMonitor(item);\r\n   }}>\r\n      {/* <img src={img} alt=\"Monitor Location Icon\" styles=\"transparent\"/> */}\r\n      <RoomIcon sx={{fill: '#F50013', maxWidth: '30px', maxHeight: '30px', minWidth: '30px', minHeight: '30px' }} size=\"large\"/>\r\n   </IconButton>\r\n   \r\n    </Marker>\r\n)))}\r\n\r\n\r\n{selectedMonitor ? (\r\n<Popup \r\nlatitude={selectedMonitor.Latitude} \r\nlongitude={selectedMonitor.Longitude}\r\noffsetLeft={22}\r\noffsetTop={10}\r\nonClose={() => {\r\n  setSelectedMonitor(null);\r\n}}\r\n\r\n>\r\n  <div>\r\n    <p><strong>AQI:</strong> {selectedMonitor.AQI}</p>\r\n    <p><strong>Parameter:</strong> {selectedMonitor.Parameter}</p>\r\n    <p><strong>Raw Concentration:</strong> {selectedMonitor.RawConcentration}</p>\r\n    <p><strong>Value:</strong> {selectedMonitor.Value}</p>\r\n    <p><strong>UTC:</strong> {selectedMonitor.UTC}</p>\r\n  </div>\r\n</Popup>\r\n) : null}\r\n\r\n{/* <Geocoder \r\n          mapRef={mapRef}\r\n          onViewportChange={handleGeocoderViewportChange}\r\n          mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n          //position=\"top-left\"\r\n          //style={geostyle}\r\n          style={{ position: 'absolute', top: 20, left: 20, zIndex: 1 }}\r\n        />\r\n      */}\r\n  \r\n<GeolocateControl\r\n              style={geolocateControlStyle}\r\n              positionOptions={{enableHighAccuracy: true}}\r\n              fitBoundsOptions ={{maxZoom: 9}}\r\n              trackUserLocation={true}\r\n              auto\r\n            />\r\n\r\n                    \r\n            {/* <img src={img} alt=\"Monitor Location Icon\"/> */}\r\n          </ReactMapGL>\r\n         \r\n      </div>\r\n\r\n      ) // connected to your return\r\n  } // connected to const Map\r\n  render(<Map />, document.getElementById(\"root\"));\r\n  \r\nexport default Map;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport PermanentDrawer from './components/PermanentDrawer'\r\nimport Dashboard from './components/Dashboard';\r\nimport PollutantsTrend from './components/pollutants_trend/PollutantsTrend';\r\nimport RankedLocations from './components/ranked_locations/RankedLocations';\r\nimport RankedPollutants from './components/ranked_pollutants/RankedPollutants';\r\nimport Pollutants from './components/Pollutants';\r\nimport Agency from './components/Agency';\r\nimport Map from './components/map/Map';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n    backgroundColor: ''\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const classes = useStyles()\r\n  return (\r\n    <>\r\n    <Router >\r\n      <div className={classes.root}>\r\n      <PermanentDrawer/>\r\n      <Switch>\r\n        <Route exact path=\"/HAQ-I\">\r\n          <Dashboard />\r\n        </Route>\r\n        <Route exact path=\"/ranked-locations\">\r\n          <RankedLocations />\r\n        </Route>\r\n        <Route exact path=\"/ranked-pollutants\">\r\n          <RankedPollutants />\r\n        </Route>\r\n        <Route exact path=\"/pollutants\">\r\n          <Pollutants />\r\n        </Route>\r\n        <Route exact path=\"/agency\" component={() => { \r\n          window.location.href = 'https://www.tceq.texas.gov/permitting/reporting.html'; \r\n          return null;\r\n        }}/>\r\n        <Route exact path=\"/map\">\r\n          <Map />\r\n        </Route>\r\n      </Switch>\r\n      </div>\r\n    </Router>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}