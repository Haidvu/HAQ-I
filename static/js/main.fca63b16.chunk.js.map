{"version":3,"sources":["components/Pollutants/refinery.jpeg","components/Pollutants/ozone.jpg","components/Pollutants/ozonehealthchest.jpg","components/PermanentDrawer.jsx","components/pollutants_trend/PollutantsTrend.jsx","components/ranked_pollutants/HealthEffect.jsx","components/ranked_pollutants/BarChart.jsx","components/ranked_pollutants/RankedPollutants.jsx","components/ranked_locations/RankedLocations.jsx","components/Dashboard.jsx","components/Pollutants/Pollutants.jsx","components/map/Map.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","useStyles","makeStyles","drawerPaper","width","drawer","StyledDrawer","styled","Drawer","PermanentDrawer","classes","history","useHistory","location","useLocation","drawerItems","text","icon","sx","fill","path","paper","className","variant","anchor","Grid","container","justifyContent","item","fontSize","Typography","color","List","map","ListItem","button","onClick","push","key","selected","pathname","ListItemIcon","ListItemText","PollutantsTrend","props","Paper","data","labels","chartLabels","datasets","label","ozone","backgroundColor","borderColor","borderWidth","pm25","pm10","options","scales","y","display","title","align","font","family","size","style","lineHeight","padding","top","left","right","bottom","height","messages","getHealthConcernLevel","aqiValue","levels","PollutantElement","parameterName","rating","aqi","reportingArea","description","useState","showHealthAdvice","setShowHealthAdvice","alignItems","margin","Number","message","HealthEffect","isLoading","HealthEffects","index","ParameterName","AQI","Category","Name","getAqiLevelRatio","Math","round","ChartBar","console","log","Charts","StackedBarchart","RankedPollutant","setLoading","setData","zip","setZipCode","API_URL","useEffect","fetch","then","res","json","Card","RankedLocations","siteName","indexAxis","plugins","legend","x","apikey","GetCalendarDate","offset","year","now","Date","start","getFullYear","diff","getTimezoneOffset","day","floor","calDate","setDate","GetStartEndDate","dateObj","getMonth","getDate","tempPollutantsTrendData","tempRankedLocationData","Dashboard","apiLimitError","setApiLimitError","pollutantsTrendData","setPollutantsTrendData","rankedPollutantsData","setRankedPollutantsdata","zipcode","setZipcode","days","i","GetDayOfWeekLabels","getDay","GetRankedLocationData","a","startDate","endDate","axios","get","response","sortedData","sort","whileCount","locationCount","SiteName","length","includes","catch","error","status","Alert","severity","AlertTitle","xs","md","lg","TextField","inputProps","maxLength","textAlign","onKeyUp","e","CheckLength","target","value","myZip","calendarDate","forEach","GetPollutansTrendData","Box","RankedPollutants","Pollutants","class","src","img1","alt","img2","img3","require","config","mapboxgl","workerClass","default","geolocateControlStyle","Map","latitude","longitude","zoom","viewport","setViewport","handleViewportChange","useRef","useCallback","newViewport","transitionDuration","mapdata","setMapdata","selectedMonitor","setSelectedMonitor","GetMapData","dataAPI","mapboxApiAccessToken","mapStyle","onViewportChange","Latitude","Longitude","IconButton","preventDefault","maxWidth","maxHeight","minWidth","minHeight","offsetLeft","offsetTop","onClose","Parameter","RawConcentration","Value","UTC","positionOptions","enableHighAccuracy","fitBoundsOptions","maxZoom","trackUserLocation","auto","render","document","getElementById","root","App","exact","component","window","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.fca63b16.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/refinery.f626d62d.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/ozone.d8af621c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ozonehealthchest.edb007b7.jpg\";","import React from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { Drawer, Grid, Typography } from '@mui/material';\r\nimport List from '@mui/material/List';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { ListItem } from '@mui/material';\r\nimport TrackChangesOutlinedIcon from '@mui/icons-material/TrackChangesOutlined';\r\nimport GraphicEqIcon from '@mui/icons-material/GraphicEq';\r\nimport RoomOutlinedIcon from '@mui/icons-material/RoomOutlined';\r\nimport WarningAmberOutlinedIcon from '@mui/icons-material/WarningAmberOutlined';\r\nimport LocalLibraryOutlinedIcon from '@mui/icons-material/LocalLibraryOutlined';\r\nimport { styled } from '@mui/system';\r\n\r\n\r\nconst drawerWidth = 240\r\nconst iconColor = 'white'\r\n\r\nconst useStyles = makeStyles({\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n  },\r\n});\r\n\r\nconst StyledDrawer = styled(Drawer)`\r\n  & > div {\r\n    background-color: #081A51;\r\n  }\r\n`;\r\n\r\nconst PermanentDrawer = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  \r\n  const drawerItems = [\r\n    {\r\n      text: 'Dashboard',\r\n      icon: <GraphicEqIcon sx={{fill: iconColor}}/>,\r\n      path: '/HAQ-I'\r\n    },\r\n    {\r\n      text: 'Map',\r\n      icon: <RoomOutlinedIcon sx={{fill: iconColor}}/>,\r\n      path: '/map'\r\n    },\r\n    {\r\n      text: 'Pollutants',\r\n      icon: <WarningAmberOutlinedIcon sx={{fill: iconColor}}/>,\r\n      path: '/pollutants'\r\n    },\r\n    {\r\n      text: 'Agency',\r\n      icon: <LocalLibraryOutlinedIcon sx={{fill: iconColor}}/>,\r\n      path: '/agency'\r\n    },\r\n  ]\r\n  return (\r\n    <StyledDrawer\r\n      classes={{ paper: classes.drawerPaper}}\r\n      className={classes.drawer}\r\n      variant=\"permanent\"\r\n      anchor=\"left\"\r\n    >\r\n      <div>\r\n        <Grid container justifyContent='center'>\r\n          <Grid item sx={6}>\r\n            <TrackChangesOutlinedIcon sx={{ fill: iconColor, fontSize: 40 }}/>\r\n          </Grid>\r\n          <Grid item sx={6}>\r\n            <Typography variant=\"h4\" color='#fff'>\r\n              HAQ-I\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n\r\n      <List>\r\n        {drawerItems.map(item => (\r\n      <ListItem button onClick={() => history.push(item.path)} key={item.text} selected={item.path === location.pathname}>\r\n            <ListItemIcon>{item.icon}</ListItemIcon>\r\n            <ListItemText>\r\n              <Typography color=\"#FFFFFF\">\r\n                {item.text}\r\n              </Typography>\r\n            </ListItemText>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </StyledDrawer>\r\n  );\r\n}\r\n\r\nexport default PermanentDrawer;","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Paper } from '@mui/material';\r\n\r\nconst PollutantsTrend = (props) => {\r\n  return (\r\n    <Paper>\r\n      <Line\r\n      data = {{\r\n        labels: props.chartLabels,\r\n        datasets: [{\r\n          label: 'OZONE',\r\n          data: props.data.ozone,\r\n          backgroundColor: 'rgba(48, 217, 135, 1)',\r\n          borderColor: 'rgba(48, 217, 135, 1)',\r\n          borderWidth: 2\r\n        },\r\n        {\r\n          label: 'PM2.5',\r\n          data: props.data.pm25,\r\n          backgroundColor: 'rgba(1, 126, 250, 1)',\r\n          borderColor: 'rgba(1, 126, 250, 1)',\r\n          borderWidth: 2\r\n      },\r\n      {\r\n        label: 'PM10',\r\n        data: props.data.pm10,\r\n        backgroundColor: 'rgba(253, 31, 155, 1)',\r\n        borderColor: 'rgba(253, 31, 155, 1)',\r\n        borderWidth: 2\r\n      }]\r\n      }}\r\n      options = {{\r\n        scales: {\r\n          y: {\r\n            display: true,\r\n            title: {\r\n              display: true,\r\n              text: 'AQI',\r\n              color: '#000000',\r\n              align: 'center',\r\n              font: {\r\n                family: 'Calibri',\r\n                size: 15,\r\n                style: 'normal',\r\n                lineHeight: 1.2\r\n              },\r\n              padding: {top: 5, left: 0, right: 0, bottom: 0}\r\n            }\r\n          }\r\n        }\r\n      }}\r\n      height={'100px'}\r\n      width={null}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default PollutantsTrend;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { BsChevronDown, BsChevronUp } from \"react-icons/bs\"\r\nimport \"./styles.css\";\r\nimport Card from '@mui/material/Card';\r\nimport Box from '@mui/material/Box';\r\n\r\n\r\n// messages to display to users for different AQI levels\r\nconst messages = [\r\n    \"Enjoy your outdoor activities\",\r\n    \"If you are unusually sensitive to particle pollution, consider reducing your activity level or shorten the amount of time you are active outdoors.\",\r\n    \"Unusually sensitive people should consider limiting prolonged outdoor exertion\",\r\n    \"Active children and adults and people with respiratory disease such as asthma  should avoid prolonged outdoor exertion. Everyone else, especially children,    should limit prolonged outdoor exertion\",\r\n    \"Active children and adults, and people with respiratory disease such as asthma,should avoid all outdoor exertion. Everyone else, especially children, should limit outdoor exertion.\",\r\n    \"Everyone should avoid all outdoor exertion.\"\r\n];\r\n\r\n\r\n\r\nconst getHealthConcernLevel = (aqiValue) => {\r\n    const levels = [\r\n        {\r\n            'title': \"good\",\r\n            \"color\": \"lightgreen\",\r\n            \"message\": messages[0]\r\n        },\r\n        {\r\n            'title': 'moderate',\r\n            'color': 'yellow',\r\n            \"message\": messages[1]\r\n        }, {\r\n            'title': 'unhealthy for sensitive groups',\r\n            'color': 'orange',\r\n            \"message\": messages[2]\r\n        }, {\r\n            'title': 'unhealthy',\r\n            'color': 'pink',\r\n            \"message\": messages[3]\r\n        }, {\r\n            'title': 'very unhealthy',\r\n            'color': 'purple',\r\n            \"message\": messages[4]\r\n        }, {\r\n            'title': 'hazardous',\r\n            'color': 'maroon',\r\n            \"message\": messages[5]\r\n        }]\r\n\r\n    if (aqiValue >= 0 && aqiValue <= 50) {\r\n        return levels[0]\r\n    }\r\n\r\n    if (aqiValue >= 51 && aqiValue <= 100) {\r\n        return levels[1]\r\n    }\r\n\r\n    if (aqiValue >= 101 && aqiValue <= 150) {\r\n        return levels[2]\r\n    }\r\n\r\n    if (aqiValue >= 151 && aqiValue <= 200) {\r\n        return levels[3]\r\n    }\r\n\r\n    if (aqiValue >= 201 && aqiValue <= 300) {\r\n        return levels[4]\r\n    }\r\n\r\n    if (aqiValue >= 301) {\r\n        return levels[5]\r\n    }\r\n\r\n    return {\r\n        'title': 'undefined',\r\n        'color': 'gray',\r\n        'message': \"Nothing\"\r\n    }\r\n}\r\n\r\nconst PollutantElement = ({ title, parameterName, rating, aqi, reportingArea, description }) => {\r\n    const [showHealthAdvice, setShowHealthAdvice] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    width: \"320px\",\r\n                    alignItems: \"center\",\r\n                    margin: \"16px 0\"\r\n                }}\r\n            >\r\n                <strong className=\"w-20\">{parameterName ? parameterName : \"No Data\"}</strong>\r\n                <div className=\"w-20\">\r\n                    <span className=\"aqi-circle\" style={{\r\n                        backgroundColor: getHealthConcernLevel(Number(aqi)).color\r\n                    }}>\r\n                        {aqi ? aqi : \"No AQI\"}\r\n                    </span>\r\n                </div>\r\n\r\n                <span className=\"w-30\">{rating}</span>\r\n                <span onClick={() => setShowHealthAdvice(!showHealthAdvice)}>\r\n                    {showHealthAdvice ? <BsChevronUp /> : <BsChevronDown />}\r\n                </span>\r\n            </div>\r\n            {showHealthAdvice && <div>{getHealthConcernLevel(Number(aqi)).message}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction HealthEffect(data,isLoading) {\r\n    const HealthEffects = ({ data }) => {\r\n        return (\r\n            <div>\r\n                <h2>Health Effect</h2>\r\n                {data && data.map((item, index) => <PollutantElement parameterName={item.ParameterName} aqi={item.AQI} rating={item.Category.Name} key={index} />)}\r\n            </div>\r\n        )\r\n    }\r\n    return(\r\n        <div className=\"w-50\">\r\n            {!data && isLoading && <span>Loading data</span>}\r\n\r\n            {data && <HealthEffects data={data} />}\r\n            {!data && !isLoading && <span>Failed to load data</span>}\r\n          </div>\r\n    )\r\n    \r\n}\r\nexport default HealthEffect\r\n\r\n\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { BsChevronDown, BsChevronUp } from \"react-icons/bs\";\r\nimport \"./styles.css\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst getAqiLevelRatio = (aqiValue) => Math.round((aqiValue / 500) * 100, 2);\r\nconst ChartBar = ({ data }) => {\r\n  console.log(data);\r\n  return (\r\n    <div className=\"flex chartbar-item\">\r\n      <span className=\"w-20 b\">{data && data.ParameterName}</span>\r\n      <span className=\"w-10\">{data && data.AQI}</span>\r\n      <div className=\"w-70\">\r\n        <div className=\"chartbar-wrapper\">\r\n          <div\r\n            className=\"chartbar-main\"\r\n            style={{\r\n              width: `${data && getAqiLevelRatio(data.AQI)}%`,\r\n            }}\r\n          />\r\n          <div className=\"chartbar-bg\">\r\n            {[\r\n              {\r\n                width: 10,\r\n                color: \"lightgreen\",\r\n              },\r\n              {\r\n                width: 10,\r\n                color: \"#fbff17\",\r\n              },\r\n              {\r\n                width: 10,\r\n                color: \"#ff7c17\",\r\n              },\r\n              {\r\n                width: 10,\r\n                color: \"red\",\r\n              },\r\n              {\r\n                width: 20,\r\n                color: \"purple\",\r\n              },\r\n              {\r\n                width: 40,\r\n                color: \"#520909\",\r\n              },\r\n            ].map((item, index) => (\r\n              <div\r\n                key={index}\r\n                className=\"chartbar-group\"\r\n                style={{\r\n                  width: `${item.width}%`,\r\n                  backgroundColor: item.color,\r\n                }}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {data && getAqiLevelRatio(data.AQI)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Charts = ({ data }) => {\r\n  return (\r\n    <div className=\"ph3\">\r\n      <h2>Ranked by Pollutants</h2>\r\n      <div className=\"ph4\">\r\n        {data &&\r\n          data.map((item, index) => <ChartBar data={item} key={index} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction StackedBarchart(data, isLoading) {\r\n  return (\r\n    <div>\r\n      {!data && isLoading && <span>Loading data</span>}\r\n      {data && <Charts data={data} />}\r\n      {!data && !isLoading && <span>Failed to load data</span>}\r\n    </div>\r\n  );\r\n}\r\nexport default StackedBarchart;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { BsChevronDown, BsChevronUp } from \"react-icons/bs\";\r\nimport \"./styles.css\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Box from \"@mui/material/Box\";\r\nimport HealthEffect from \"./HealthEffect\";\r\nimport StackedBarchart from \"./BarChart\";\r\n\r\nconst RankedPollutant = (props) => {\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [data, setData] = useState(null);\r\n  const [zipCode, setZipCode] = useState(props.zip);\r\n\r\n  let API_URL = `https://www.airnowapi.org/aq/observation/zipCode/current/?format=application/json&zipCode=${props.zip}&distance=25&API_KEY=055CDA36-3FC4-4E95-BBBE-73C265CF3131`;\r\n\r\n  console.log('RankedPollutant', props.zip);\r\n\r\n  useEffect(() => {\r\n    setZipCode(props.zip)\r\n    fetch(API_URL)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setData(data);\r\n        setLoading(false);\r\n      });\r\n    console.log('RankedPollutant useEffect', props.zip);\r\n  }, [props.zip]);\r\n  return (\r\n    <Card>\r\n      <div className=\"flex\">\r\n        <div className=\"w-70\">\r\n          {data ? <div>{StackedBarchart(data, isLoading)}</div> : \"\"}\r\n        </div>\r\n        <div className=\"w-50\">\r\n          {!data && isLoading && <span>Loading data</span>}\r\n          {data ? <div>{HealthEffect(data, isLoading)}</div> : \"\"}\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default RankedPollutant;\r\n","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Paper, Typography } from '@mui/material';\r\n\r\nconst RankedLocations = (props) => {\r\n  return (\r\n    <>\r\n      <Paper>\r\n        <Typography align='center'>\r\n          Rank by Locations in Houston\r\n        </Typography>\r\n        <Bar\r\n        data = {{\r\n          labels: props.data.siteName,\r\n          datasets: [{\r\n            label: 'HOUSTON',\r\n            data: props.data.aqi,\r\n            backgroundColor: 'rgba(81, 203, 255, 1)',\r\n            borderColor: 'rgba(81, 203, 255, 1)',\r\n            borderWidth: 2\r\n          },\r\n        ]\r\n        }}\r\n        options = {{\r\n          indexAxis: 'y',\r\n          plugins: {\r\n            legend: {\r\n              display: false\r\n            }\r\n          },\r\n          scales: {\r\n            x: {\r\n              display: true,\r\n              title: {\r\n                display: true,\r\n                text: 'AQI',\r\n                color: '#000000',\r\n                align: 'center',\r\n                font: {\r\n                  family: 'Calibri',\r\n                  size: 15,\r\n                  style: 'normal',\r\n                  lineHeight: 1.2\r\n                },\r\n                padding: {top: 5, left: 0, right: 0, bottom: 0}\r\n              }\r\n            }\r\n          }\r\n        }}\r\n        height={null}\r\n        width={null}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RankedLocations;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport PollutantsTrend from './pollutants_trend/PollutantsTrend';\r\nimport Alert from '@mui/material/Alert';\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\nimport { Box, TextField, Grid } from '@mui/material';\r\n\r\nimport RankedPollutants from './ranked_pollutants/RankedPollutants';\r\nimport RankedLocations from './ranked_locations/RankedLocations';\r\n\r\nconst apikey = '81AE9E6C-ABE1-4FE5-A11C-75ED6ACA2A07'\r\n\r\nconst InitialPollutantsTrendData = () => {\r\n  return {\r\n    ozone: [null,null,null,null,null,null,null], \r\n    pm25: [null,null,null,null,null,null,null], \r\n    pm10: [null,null,null,null,null,null,null]\r\n  }\r\n};\r\n\r\nconst InitialRankedLocationData = () => {\r\n  return {\r\n    siteName: [null,null,null,null,null], \r\n    aqi: [null,null,null,null,null], \r\n  }\r\n};\r\n\r\nconst GetCalendarDate = (offset, year) => {\r\n  const oneDay = 1000 * 60 * 60 * 24;\r\n  const now = new Date();\r\n  const start = new Date(now.getFullYear(), 0, 0);\r\n  const diff = (now - start) + ((start.getTimezoneOffset() - now.getTimezoneOffset()) * 60 * 1000 - (oneDay * offset));\r\n  const day = Math.floor(diff / oneDay);\r\n  const calDate = new Date(year, 0)\r\n  return new Date(calDate.setDate(day))\r\n};\r\n\r\nconst GetStartEndDate = () => {\r\n  let dateObj = GetCalendarDate(0, new Date().getFullYear())\r\n  const start = dateObj.getFullYear() + '-' + (dateObj.getMonth() + 1) + '-' + dateObj.getDate()\r\n  dateObj = GetCalendarDate(1, new Date().getFullYear())\r\n  const end = dateObj.getFullYear() + '-' + (dateObj.getMonth() + 1) + '-' + dateObj.getDate()\r\n  return [end, start]\r\n};\r\n\r\nconst tempPollutantsTrendData = InitialPollutantsTrendData();\r\nconst tempRankedLocationData = InitialRankedLocationData();\r\n\r\nconst GetDayOfWeekLabels = (dateObj) => {\r\n  const days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday']\r\n  const labels = [null,null,null,null,null,null,null]\r\n  for (let i = 6; i > -1; i--){\r\n    labels[i] = days[ dateObj ]\r\n    dateObj = dateObj - 1\r\n    if (dateObj === -1) {\r\n      dateObj = 6\r\n    }\r\n  }\r\n  return labels;\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const [apiLimitError, setApiLimitError] = useState(false)\r\n  const [pollutantsTrendData, setPollutantsTrendData] = useState(() => InitialPollutantsTrendData());\r\n  const [rankedPollutantsData, setRankedPollutantsdata] = useState(() => InitialRankedLocationData());\r\n  const [zipcode, setZipcode] = useState('');\r\n  const chartLabels = GetDayOfWeekLabels(new Date().getDay());\r\n\r\n  const GetRankedLocationData = async () => {\r\n    const [startDate, endDate] = GetStartEndDate()\r\n    await axios.get('https://www.airnowapi.org/aq/data/?startDate=' + startDate + 'T00&endDate=' + endDate + 'T00&parameters=OZONE,PM25,PM10&BBOX=-96.072388,29.091871,-94.578247,30.227919&dataType=A&format=application/json&verbose=1&monitorType=2&includerawconcentrations=0&API_KEY=' + apikey)\r\n    .then((response) => {\r\n      const sortedData = response.data.sort(({AQI:x},{AQI:y}) => y - x)\r\n      let whileCount = 1\r\n      let locationCount = 1\r\n      tempRankedLocationData.siteName[0] = sortedData[0].SiteName\r\n      tempRankedLocationData.aqi[0] = sortedData[0].AQI\r\n      // Get unique site names for tempRankedLocationData\r\n      while (locationCount < 5 && whileCount < response.data.length){\r\n        if (!tempRankedLocationData.siteName.includes(sortedData[whileCount].SiteName)) {\r\n          tempRankedLocationData.siteName[locationCount] = sortedData[whileCount].SiteName\r\n          tempRankedLocationData.aqi[locationCount] = sortedData[whileCount].AQI\r\n          locationCount += 1\r\n        }\r\n        whileCount += 1\r\n      }\r\n      setRankedPollutantsdata(tempRankedLocationData);\r\n    })\r\n    .catch((error) => {\r\n      if (error.response.status === 429){\r\n        setApiLimitError(true)\r\n      }\r\n    })\r\n  };\r\n\r\n  const GetPollutansTrendData = (myZip) => {\r\n    // Set initial day of year and current year\r\n    setZipcode(myZip);\r\n    let dateObj = GetCalendarDate(0, new Date().getFullYear())\r\n    let calendarDate = dateObj.getFullYear() + '-' + (dateObj.getMonth() + 1) + '-' + dateObj.getDate()\r\n    console.log('CURRENT DATE', calendarDate)\r\n    for (let i = 6; i > -1; i--) { // For the past 7 days\r\n      axios.get('https://www.airnowapi.org/aq/observation/zipCode/historical/?format=application/json&zipCode=' + myZip + '&date=' + calendarDate + 'T00-0000&distance=25&API_KEY=' + apikey)\r\n      .then((response) => {\r\n        response.data.forEach(data => \r\n          data.ParameterName === 'OZONE' ? tempPollutantsTrendData.ozone[i] = data.AQI :\r\n          data.ParameterName === 'PM2.5' ? tempPollutantsTrendData.pm25[i] = data.AQI :\r\n          data.ParameterName === 'PM10' ? tempPollutantsTrendData.pm10[i] = data.AQI :\r\n          null\r\n        )\r\n      })\r\n      dateObj = GetCalendarDate(7 - i, dateObj.getFullYear())\r\n      calendarDate = dateObj.getFullYear() + '-' + (dateObj.getMonth() + 1) + '-' + dateObj.getDate()\r\n    }\r\n    console.log('tempPollutantsTrendData', tempPollutantsTrendData.ozone)\r\n  };\r\n\r\n  const CheckState = () => {\r\n    setPollutantsTrendData(InitialPollutantsTrendData());\r\n  };\r\n\r\n  const CheckLength = (text) => {\r\n    if (text.length === 5) {\r\n      return true\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPollutantsTrendData(tempPollutantsTrendData);\r\n    GetRankedLocationData();\r\n  },[pollutantsTrendData]);\r\n\r\n  const RenderDashboard = () => {\r\n    if (apiLimitError){\r\n    return ( \r\n      <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh', width: '100%'}}>\r\n        <Alert severity=\"error\">\r\n          <AlertTitle>Error</AlertTitle>\r\n            <strong>Reached request limit of AirNow API. Please come back in one hour.</strong>\r\n        </Alert>\r\n      </div>\r\n    )}\r\n    return (\r\n      <Grid container>\r\n        <Grid container item justifyContent='center' xs={12} md={12} lg={12}>\r\n          <Grid item xs='auto' md='auto' lg='auto'>\r\n            <TextField \r\n              label=\"ZIPCODE\" \r\n              variant=\"standard\" \r\n              inputProps={{ maxLength: 5, style: { textAlign: 'center', color: '#1976d2' } }}\r\n              onKeyUp={(e) => e.key === 'Enter' ? CheckState() : CheckLength(e.target.value) ? GetPollutansTrendData(e.target.value) : null} />\r\n              {/* <Button variant=\"contained\" sx={{ ml: '5px', mt: '12px' }} onClick={() => CheckState()}>Search</Button> */}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container item xs={12} md={12} lg={12}>\r\n          <Grid item xs={12} md={12} lg={12}>\r\n            <Box sx={{ width: '99%', height: '25%', margin: '8px'}}>\r\n              <PollutantsTrend data={pollutantsTrendData} chartLabels={chartLabels}/>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={6} md={6} lg={6}>\r\n            <Box sx={{ width: '98%', height: '25%', margin: '8px'}}>\r\n              <RankedPollutants zip={zipcode}/>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={6} md={6} lg={6}>\r\n            <Box sx={{ width: '98%', height: '25%', margin: '8px'}}>\r\n              <RankedLocations data={rankedPollutantsData}/>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {(\r\n      RenderDashboard()\r\n    )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;","import React, { Component }  from 'react';\r\nimport img1 from './refinery.jpeg';\r\nimport img2 from './ozone.jpg';\r\nimport img3 from './ozonehealthchest.jpg';\r\nimport './Pollutants.css';\r\n\r\nconst content = <html>\r\n<head>\r\n<link rel=\"stylesheet\" href=\"Pollutants.css\"/>\r\n</head>\r\n<body>\r\n</body>\r\n</html>\r\n\r\nexport default function Pollutants(){\r\n  return (\r\n    <div>\r\n    <div class=\"row\">\r\n    <div class=\"leftcolumn\">\r\n      <div class=\"card\">\r\n        <h1>Pollutants</h1>\r\n        <p>Particulate Matter (PM)</p>\r\n        <p>Mixture of solid particles and liquid droplets found in the air we breathe. They can contain chemicals such as sulfur dioxide and nitrogen oxides. </p>\r\n        <p>Three important particulate matter we monitor are PM 10, PM 2.5, and Ozone. </p>\r\n        <img src={img1} alt=\"Pic\"/>\r\n      </div>\r\n      <div class=\"card\">\r\n        <h2>PM 10</h2>\r\n        <p>Inhalable particulate matter, with sizes ranging from 10 microns and less in diameter. </p>\r\n        <p>Examples: Dust, dirt, soot, smoke </p>\r\n        <p>PM 10 can come from construction sites, landfills, agriculture, wildfires, industrial sites, and pollen.</p>\r\n      </div>\r\n      <div class=\"card\">\r\n        <h2>PM 2.5</h2>\r\n        <p>Finer inhalable particulate matter, with sizes ranging 2.5 microns and less. It is the main component that causes \"haze\" people often see in urban areas.</p>\r\n        <p>Sources include the combustion of gasoline, oil, diesel, coal, and wood.</p>\r\n        <p>PM 2.5 is more dangerous than PM 10 because it is small enough to bypass many of the human body's defense systems against foreign material. This includes nose hairs and mucus. </p>\r\n        <p>There are about 25,000 microns in an inch. The largest 2.5 micron particulate can be 30 times smaller than a strand of human hair. </p>\r\n      </div>\r\n      <div class=\"card\">\r\n        <h3>Particulate Matter Health Risks</h3>\r\n        <p>• Premature death in people with heart or lung disease</p>\r\n        <p>• Non-fatal heart attacks</p>\r\n        <p>• Irregular heartbeat</p>\r\n        <p>• Aggravated asthma</p>\r\n        <p>• Irritation of the lung airways, coughing or difficulty breathing.</p>\r\n      </div>\r\n      <div class=\"card\">\r\n        <h2>Ozone</h2>\r\n        <p>Ozone is a gas composed of three oxygen atoms. Ozone occurs both in the Earth's upper atmosphere and at ground-level. Ozone can be good or bad depending on where it is in the atmosphere.\r\n  Good ozone occurs naturally in the upper atmosphere (stratospheric ozone), where it forms a protective layer that shields the planet from the sun's harmful ultraviolet (UV) rays. \r\n  Ozone at ground-level is a harmful air pollutant that is the main component that create \"smog\". \r\n    <p>Ground-level Ozone is created by chemical reactions between oxides of nitrogen (NOx) and volatile organic compounds (VOC). This happens when pollutants emitted by cars, power plants, refineries, chemical plants, and other sources chemically react in the presence of sunlight.</p>\r\n  Ozone at the ground-level can reach it's most unhealthy levels on hot sunny days in urban environments, but can still reach high levels during colder months. \r\n  These pollutants can also travel long distances by wind, so urban areas are not the only areas with high risk. \r\n    </p>\r\n    <h3> Who is at risk?</h3>\r\n    <p>People most at risk from breathing air containing ozone include people with asthma, children, older adults, and people who are active outdoors. In addition, people with certain genetic characteristics, and people with reduced intake of certain nutrients, such as vitamins C and E, are at greater risk from ozone exposure. \r\n  Children have the greatest risk from exposure to ozone because their lungs are still developing. Children are also more likely than adults to have asthma.</p>\r\n    <img src={img2} alt=\"Pic\"/>\r\n    <img src={img3} alt=\"Pic\"/>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n</div>\r\n)}\r\n\r\n\r\n\r\n\r\n","import React, { useState, useRef, useCallback } from \"react\";\r\nimport ReactMapGL, {Marker, Popup} from \"react-map-gl\";\r\nimport { render } from \"react-dom\";\r\nimport {GeolocateControl} from \"react-map-gl\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport mapboxgl from 'mapbox-gl';\r\nimport axios from 'axios';\r\nimport { useEffect } from \"react\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport RoomIcon from '@mui/icons-material/Room';\r\nrequire('dotenv').config();\r\n\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nmapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker').default;\r\n\r\n\r\nconst geolocateControlStyle= {\r\n  right: 10,\r\n  top: 10\r\n};\r\n\r\n\r\nconst Map = () => {\r\n   \r\n  const [viewport, setViewport] = useState({\r\n    latitude: 29.749907,\r\n    longitude: -95.358421,\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    zoom: 8.5,\r\n  });\r\n\r\n  const mapRef = useRef();\r\n  const handleViewportChange = useCallback(\r\n    (newViewport) => setViewport(newViewport),\r\n    []\r\n  );\r\n\r\n  // if you are happy with Geocoder default settings, you can just use handleViewportChange directly\r\n  const handleGeocoderViewportChange = useCallback(\r\n    (newViewport) => {\r\n      const geocoderDefaultOverrides = { transitionDuration: 1000 };\r\n\r\n      return handleViewportChange({\r\n        ...newViewport,\r\n        ...geocoderDefaultOverrides\r\n      });\r\n    },\r\n    [handleViewportChange]\r\n  );\r\n\r\n    const [mapdata, setMapdata] = useState([]);\r\n    const [selectedMonitor, setSelectedMonitor] = useState(null);\r\n    const GetMapData = async () =>{\r\n      try{\r\n        const dataAPI = await axios.get(\"https://www.airnowapi.org/aq/data/?startDate=2021-11-23T20&endDate=2021-11-23T21&parameters=OZONE,PM25,PM10&BBOX=-95.945435,29.260701,-94.341431,30.195642&dataType=B&format=application/json&verbose=0&monitorType=2&includerawconcentrations=1&API_KEY=055CDA36-3FC4-4E95-BBBE-73C265CF3131\")\r\n        console.log(dataAPI.data);\r\n        setMapdata(dataAPI.data);\r\n      }\r\n      catch(e){\r\n        console.log(e)\r\n      }\r\n    }\r\n\r\n    useEffect(()=>{\r\n      GetMapData()\r\n    },[])\r\n\r\n   \r\n  return (\r\n\r\n    <div>\r\n      <ReactMapGL \r\n         {...viewport} \r\n          mapboxApiAccessToken=\"pk.eyJ1IjoiY29ycmlnZXV4IiwiYSI6ImNrdnZ6dHl4NTBkenAybm8xd3JvZnBtYngifQ.2NhYu29NM9-8J5adEyvuzA\"\r\n          mapStyle=\"mapbox://styles/corrigeux/ckvw155sf03ac14lh1u9rv6sh\"\r\n          onViewportChange={(viewport) => setViewport(viewport)}\r\n            >\r\n\r\n{mapdata.map((item => (\r\n  \r\n    <Marker\r\n     key={item}\r\n     latitude={item.Latitude}\r\n     longitude={item.Longitude}\r\n     >\r\n       \r\n   <IconButton onClick={(e) => {\r\n     e.preventDefault();\r\n     setSelectedMonitor(item);\r\n   }}>\r\n      {/* <img src={img} alt=\"Monitor Location Icon\" styles=\"transparent\"/> */}\r\n      <RoomIcon sx={{fill: '#F50013', maxWidth: '30px', maxHeight: '30px', minWidth: '30px', minHeight: '30px' }} size=\"large\"/>\r\n   </IconButton>\r\n   \r\n    </Marker>\r\n)))}\r\n\r\n\r\n{selectedMonitor ? (\r\n<Popup \r\nlatitude={selectedMonitor.Latitude} \r\nlongitude={selectedMonitor.Longitude}\r\noffsetLeft={22}\r\noffsetTop={10}\r\nonClose={() => {\r\n  setSelectedMonitor(null);\r\n}}\r\n\r\n>\r\n  <div>\r\n    <p><strong>AQI:</strong> {selectedMonitor.AQI}</p>\r\n    <p><strong>Parameter:</strong> {selectedMonitor.Parameter}</p>\r\n    <p><strong>Raw Concentration:</strong> {selectedMonitor.RawConcentration}</p>\r\n    <p><strong>Value:</strong> {selectedMonitor.Value}</p>\r\n    <p><strong>UTC:</strong> {selectedMonitor.UTC}</p>\r\n  </div>\r\n</Popup>\r\n) : null}\r\n\r\n{/* <Geocoder \r\n          mapRef={mapRef}\r\n          onViewportChange={handleGeocoderViewportChange}\r\n          mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n          //position=\"top-left\"\r\n          //style={geostyle}\r\n          style={{ position: 'absolute', top: 20, left: 20, zIndex: 1 }}\r\n        />\r\n      */}\r\n  \r\n<GeolocateControl\r\n              style={geolocateControlStyle}\r\n              positionOptions={{enableHighAccuracy: true}}\r\n              fitBoundsOptions ={{maxZoom: 9}}\r\n              trackUserLocation={true}\r\n              auto\r\n            />\r\n\r\n                    \r\n            {/* <img src={img} alt=\"Monitor Location Icon\"/> */}\r\n          </ReactMapGL>\r\n         \r\n      </div>\r\n\r\n      ) // connected to your return\r\n  } // connected to const Map\r\n  render(<Map />, document.getElementById(\"root\"));\r\n  \r\nexport default Map;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport PermanentDrawer from './components/PermanentDrawer'\r\nimport Dashboard from './components/Dashboard';\r\nimport PollutantsTrend from './components/pollutants_trend/PollutantsTrend';\r\nimport RankedLocations from './components/ranked_locations/RankedLocations';\r\nimport RankedPollutants from './components/ranked_pollutants/RankedPollutants';\r\nimport Pollutants from './components/Pollutants/Pollutants';\r\nimport Map from './components/map/Map';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n    backgroundColor: ''\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const classes = useStyles()\r\n  return (\r\n    <>\r\n    <Router >\r\n      <div className={classes.root}>\r\n      <PermanentDrawer/>\r\n      <Switch>\r\n        <Route exact path=\"/HAQ-I\">\r\n          <Dashboard />\r\n        </Route>\r\n        <Route exact path=\"/ranked-locations\">\r\n          <RankedLocations />\r\n        </Route>\r\n        <Route exact path=\"/ranked-pollutants\">\r\n          <RankedPollutants />\r\n        </Route>\r\n        <Route exact path=\"/pollutants\">\r\n          <Pollutants />\r\n        </Route>\r\n        <Route exact path=\"/agency\" component={() => { \r\n          window.location.href = 'https://www.tceq.texas.gov/permitting/reporting.html'; \r\n          return null;\r\n        }}/>\r\n        <Route exact path=\"/map\">\r\n          <Map />\r\n        </Route>\r\n      </Switch>\r\n      </div>\r\n    </Router>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}